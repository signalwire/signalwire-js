name: RealtimeAPI SDK [production]

on:
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: '20 * * * *'

concurrency:
  group: ${{ github.workflow }}-realtime-api-production-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: Run E2E tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Continue other jobs if one fails
      matrix:
        node-version: [20.x]
        test_command: ['dev:rtonly', 'dev:playwright']
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        uses: ./.github/actions/install
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - name: Build SDKs
        uses: ./.github/actions/build
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - name: Install Playwright
        if: matrix.test_command == 'dev:playwright'
        uses: ./.github/actions/playwright
        with:
          PLAYWRIGHT_VERSION: '1.35.1'
      - name: Test
        run: 'npm run -w=@sw-internal/e2e-realtime-api ${{ matrix.test_command }}'
        env:
          SW_TEST_CONFIG: ${{ secrets.PRODUCTION_E2E_REALTIME_SW_TEST_CONFIG }}

  report-result:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: success() || failure()
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/report-test-result
        with:
          result: ${{ needs.e2e-tests.result }}
          test-suite: realtime-api
          environment: production
          influxdb-bucket: ${{ secrets.INFLUXDB_BUCKET }}
          influxdb-org: ${{ secrets.INFLUXDB_ORG }}
          influxdb-token: ${{ secrets.INFLUXDB_TOKEN }}
          influxdb-url: ${{ secrets.INFLUXDB_URL }}
