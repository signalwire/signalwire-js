name: Browser SDK [staging]

on:
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: '10 */4 * * *'

concurrency:
  group: ${{ github.workflow }}-e2e-js-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: Run E2E tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
        project: [
            default,
            # streaming,
            # badNetwork,
            # promote,
            # demote,
            # audience,
            # reattach,
            callfabric,
            renegotiation,
            videoElement,
            v2WebRTC,
          ]
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        uses: ./.github/actions/install
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - name: Build SDKs
        uses: ./.github/actions/build
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - name: Install Playwright
        uses: ./.github/actions/playwright
        with:
          PLAYWRIGHT_VERSION: '1.35.1' # TODO: Read from deps ?
      - name: Install Zrok
        if: ${{ matrix.project == 'v2WebRTC'}}
        run: |
          curl -O https://github.com/openziti/zrok/releases/download/v1.0.4/zrok_1.0.4_linux_amd64.tar.gz
          mkdir /tmp/zrok && tar -xf ./zrok_1.0.4_linux_amd64.tar.gz -C /tmp/zrok
          mkdir -p /usr/bin && install /tmp/zrok/zrok /usr/bin/
          zrok version
          zrok config set apiEndpoint ${{ secrets.SW_ZROK_API_ENDPOINT }}
          zrok enable ${{ secrets.SW_ZROK_TOKEN }}
      - name: Test
        run: npm run -w=@sw-internal/e2e-js dev -- --project ${{ matrix.project }}
        env:
          SW_TEST_CONFIG: ${{ secrets.STAGING_E2E_JS_SW_TEST_CONFIG }}

  report-result:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: success() || failure()
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/report-test-result
        with:
          result: ${{ needs.e2e-tests.result }}
          test-suite: browser-js
          environment: staging
          influxdb-bucket: ${{ secrets.INFLUXDB_BUCKET }}
          influxdb-org: ${{ secrets.INFLUXDB_ORG }}
          influxdb-token: ${{ secrets.INFLUXDB_TOKEN }}
          influxdb-url: ${{ secrets.INFLUXDB_URL }}
