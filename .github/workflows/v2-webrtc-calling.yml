name: v2 WebRTC Calling Tests

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      region:
        description: 'Region to test (leave empty to run all)'
        type: choice
        required: false
        options:
          - ''
          - 'us'
          - 'ch'
          - 'eu'
          - 'me'
          - 'spr-preprod'
          - 'staging'
  schedule:
    - cron: '0/30 * * * *'

concurrency:
  group: ${{ github.workflow }}-e2e-webrtc-calling-${{ github.ref }}
  cancel-in-progress: true

jobs:
  determine_regions:
    runs-on: ubuntu-latest
    outputs:
      regions: ${{ steps.set-regions.outputs.regions }}
    steps:
      - name: Set regions
        id: set-regions
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.region }}" ]; then
            echo 'regions=["${{ github.event.inputs.region }}"]' >> $GITHUB_OUTPUT
          else
            echo 'regions=["us", "eu", "ch", "me", "spr-preprod", "staging"]' >> $GITHUB_OUTPUT
          fi

  e2e-tests:
    name: Run E2E tests
    needs: determine_regions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        region: ${{ fromJson(needs.determine_regions.outputs.regions) }}
    steps:
      - run: |
          echo ${{matrix.region}}
      - name: Set region properties
        id: set-properties
        run: |
          case "${{ matrix.region }}" in
            us)
              echo "environment=production" >> $GITHUB_OUTPUT
              echo "config=PRODUCTION_E2E_JS_SW_TEST_CONFIG" >> $GITHUB_OUTPUT
              echo "cxml_conference_region=" >> $GITHUB_OUTPUT
              ;;
            ch)
              echo "environment=production-ch" >> $GITHUB_OUTPUT
              echo "config=PRODUCTION_E2E_JS_CHREGION_SW_TEST_CONFIG" >> $GITHUB_OUTPUT
              echo "cxml_conference_region=region=\"eu\"" >> $GITHUB_OUTPUT
              ;;
            eu)
              echo "environment=production-eu" >> $GITHUB_OUTPUT
              echo "config=PRODUCTION_E2E_JS_EUREGION_SW_TEST_CONFIG" >> $GITHUB_OUTPUT
              echo "cxml_conference_region=region=\"eu\"" >> $GITHUB_OUTPUT
              ;;
            me)
              echo "environment=production-me" >> $GITHUB_OUTPUT
              echo "config=PRODUCTION_E2E_JS_MEREGION_SW_TEST_CONFIG" >> $GITHUB_OUTPUT
              echo "cxml_conference_region=" >> $GITHUB_OUTPUT
              ;;
            spr-preprod)
              echo "environment=production-spr-preprod" >> $GITHUB_OUTPUT
              echo "config=PRODUCTION_E2E_JS_SPRPREPRODREGION_SW_TEST_CONFIG" >> $GITHUB_OUTPUT
              echo "cxml_conference_region=region=" >> $GITHUB_OUTPUT
              ;;
            au)
              echo "environment=staging" >> $GITHUB_OUTPUT
              echo "config=STAGING_E2E_JS_SW_TEST_CONFIG" >> $GITHUB_OUTPUT
              echo "cxml_conference_region=" >> $GITHUB_OUTPUT
              ;;
          esac
      - uses: actions/checkout@v4
      - name: Install deps
        uses: ./.github/actions/install
        with:
          NODE_VERSION: 18.x
      - name: Build SDKs
        uses: ./.github/actions/build
        with:
          NODE_VERSION: 18.x
      - name: Install Playwright
        uses: ./.github/actions/playwright
        with:
          PLAYWRIGHT_VERSION: '1.35.1' # TODO: Read from deps ?
      - name: Run test for ${{ matrix.region }}
        id: run-tests
        run: npm run -w=@sw-internal/e2e-js dev -- v2WebrtcFromRest.spec.ts webrtcCalling.spec.ts
        env:
          SW_TEST_CONFIG: ${{ secrets[steps.set-properties.outputs.config] }}
          LAML_CONFERENCE_REGION: ${{ steps.set-properties.outputs.cxml_conference_region }}
      - name: Report Result
        if: success() || failure()
        uses: ./.github/actions/report-test-result
        with:
          result: ${{ steps.run-tests.conclusion }}
          test-suite: v2-sdk-tests
          environment: ${{ steps.set-properties.outputs.environment }}
          influxdb-bucket: ${{ secrets.INFLUXDB_BUCKET }}
          influxdb-org: ${{ secrets.INFLUXDB_ORG }}
          influxdb-token: ${{ secrets.INFLUXDB_TOKEN }}
          influxdb-url: ${{ secrets.INFLUXDB_URL }}
